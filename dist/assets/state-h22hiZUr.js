import{r as e,g as t,R as n}from"./vendor-X31hiD63.js";const r={},o=e=>{let t;const n=new Set,o=(e,r)=>{const o="function"==typeof e?e(t):e;if(!Object.is(o,t)){const e=t;t=(null!=r?r:"object"!=typeof o||null===o)?o:Object.assign({},t,o),n.forEach(n=>n(t,e))}},u=()=>t,s={setState:o,getState:u,getInitialState:()=>i,subscribe:e=>(n.add(e),()=>n.delete(e)),destroy:()=>{"production"!==(r?"production":void 0)&&console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),n.clear()}},i=t=e(o,u,s);return s};var u={exports:{}},s={},i={exports:{}},a={},c=e;var l="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},f=c.useState,d=c.useEffect,v=c.useLayoutEffect,p=c.useDebugValue;function S(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!l(e,n)}catch(r){return!0}}var b="undefined"==typeof window||void 0===window.document||void 0===window.document.createElement?function(e,t){return t()}:function(e,t){var n=t(),r=f({inst:{value:n,getSnapshot:t}}),o=r[0].inst,u=r[1];return v(function(){o.value=n,o.getSnapshot=t,S(o)&&u({inst:o})},[e,n,t]),d(function(){return S(o)&&u({inst:o}),e(function(){S(o)&&u({inst:o})})},[e]),p(n),n};a.useSyncExternalStore=void 0!==c.useSyncExternalStore?c.useSyncExternalStore:b,i.exports=a;var E=e,y=i.exports;
/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var g="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},h=y.useSyncExternalStore,m=E.useRef,w=E.useEffect,x=E.useMemo,j=E.useDebugValue;s.useSyncExternalStoreWithSelector=function(e,t,n,r,o){var u=m(null);if(null===u.current){var s={hasValue:!1,value:null};u.current=s}else s=u.current;u=x(function(){function e(e){if(!a){if(a=!0,u=e,e=r(e),void 0!==o&&s.hasValue){var t=s.value;if(o(t,e))return i=t}return i=e}if(t=i,g(u,e))return t;var n=r(e);return void 0!==o&&o(t,n)?(u=e,t):(u=e,i=n)}var u,i,a=!1,c=void 0===n?null:n;return[function(){return e(t())},null===c?void 0:function(){return e(c())}]},[t,n,r,o]);var i=h(e,u[0],u[1]);return w(function(){s.hasValue=!0,s.value=i},[i]),j(i),i},u.exports=s;const D=t(u.exports),O={},{useDebugValue:V}=n,{useSyncExternalStoreWithSelector:R}=D;let T=!1;const I=e=>e;const P=e=>{"production"!==(O?"production":void 0)&&"function"!=typeof e&&console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");const t="function"==typeof e?(e=>e?o(e):o)(e):e,n=(e,n)=>function(e,t=I,n){"production"!==(O?"production":void 0)&&n&&!T&&(console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"),T=!0);const r=R(e.subscribe,e.getState,e.getServerState||e.getInitialState,t,n);return V(r),r}(t,e,n);return Object.assign(n,t),n},W=e=>P;export{W as c};
//# sourceMappingURL=state-h22hiZUr.js.map
